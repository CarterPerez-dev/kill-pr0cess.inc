/*
 * Component-specific styles providing specialized styling for complex UI elements like fractal canvas, performance charts, and interactive components.
 * I'm implementing component-scoped styles that complement Tailwind utilities while maintaining the dark, eerie aesthetic throughout all interactive elements.
 */

/* I'm styling the fractal canvas and its interactive controls */
.fractal-canvas-container {
  position: relative;
  background: var(--bg-secondary);
  border: 1px solid var(--border-primary);
  border-radius: var(--border-radius-lg);
  overflow: hidden;
}

.fractal-canvas {
  display: block;
  cursor: crosshair;
  transition: cursor 0.1s ease;
}

.fractal-canvas:active {
  cursor: grabbing;
}

.fractal-canvas-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  z-index: 10;
}

.fractal-controls {
  position: absolute;
  top: 1rem;
  right: 1rem;
  background: rgba(0, 0, 0, 0.9);
  backdrop-filter: blur(10px);
  border: 1px solid var(--border-secondary);
  border-radius: var(--border-radius);
  padding: 1rem;
  min-width: 200px;
  font-family: var(--font-mono);
  font-size: 0.75rem;
}

.fractal-controls-header {
  color: var(--color-primary);
  font-weight: 600;
  margin-bottom: 0.75rem;
  text-transform: uppercase;
  letter-spacing: 0.1em;
}

.fractal-parameter {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.5rem;
  color: var(--text-secondary);
}

.fractal-parameter-value {
  color: var(--text-primary);
  font-weight: 500;
}

.fractal-slider {
  width: 100%;
  height: 4px;
  background: var(--border-primary);
  border-radius: 2px;
  outline: none;
  -webkit-appearance: none;
  appearance: none;
  margin: 0.5rem 0;
}

.fractal-slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 16px;
  height: 16px;
  background: var(--color-primary);
  border-radius: 50%;
  cursor: pointer;
  transition: all 0.2s ease;
}

.fractal-slider::-webkit-slider-thumb:hover {
  transform: scale(1.2);
  box-shadow: 0 0 10px var(--color-primary);
}

.fractal-slider::-moz-range-thumb {
  width: 16px;
  height: 16px;
  background: var(--color-primary);
  border-radius: 50%;
  cursor: pointer;
  border: none;
  transition: all 0.2s ease;
}

.fractal-slider::-moz-range-thumb:hover {
  transform: scale(1.2);
  box-shadow: 0 0 10px var(--color-primary);
}

/* I'm creating performance chart styles */
.performance-chart {
  background: var(--bg-tertiary);
  border: 1px solid var(--border-primary);
  border-radius: var(--border-radius-lg);
  padding: 1.5rem;
  position: relative;
}

.performance-chart-title {
  font-family: var(--font-mono);
  font-size: 0.875rem;
  color: var(--text-secondary);
  text-transform: uppercase;
  letter-spacing: 0.1em;
  margin-bottom: 1rem;
}

.performance-metric-card {
  background: rgba(255, 255, 255, 0.02);
  border: 1px solid var(--border-primary);
  border-radius: var(--border-radius);
  padding: 1rem;
  transition: all var(--duration-fast) ease;
}

.performance-metric-card:hover {
  border-color: var(--border-secondary);
  background: rgba(255, 255, 255, 0.05);
}

.performance-metric-label {
  font-size: 0.75rem;
  color: var(--text-tertiary);
  text-transform: uppercase;
  letter-spacing: 0.05em;
  margin-bottom: 0.25rem;
}

.performance-metric-value {
  font-family: var(--font-mono);
  font-size: 1.5rem;
  font-weight: 600;
  color: var(--text-primary);
  line-height: 1;
}

.performance-metric-unit {
  font-size: 0.875rem;
  color: var(--text-secondary);
  margin-left: 0.25rem;
}

.performance-trend-up {
  color: var(--color-success);
}

.performance-trend-down {
  color: var(--color-error);
}

.performance-trend-stable {
  color: var(--text-muted);
}

/* I'm styling the system monitor component */
.system-monitor-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 1rem;
}

.system-resource-card {
  background: var(--bg-tertiary);
  border: 1px solid var(--border-primary);
  border-radius: var(--border-radius-lg);
  padding: 1.25rem;
  position: relative;
  overflow: hidden;
}

.system-resource-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 2px;
  background: linear-gradient(90deg, transparent, var(--color-primary), transparent);
  opacity: 0;
  transition: opacity var(--duration-medium) ease;
}

.system-resource-card:hover::before {
  opacity: 1;
}

.resource-usage-bar {
  width: 100%;
  height: 8px;
  background: var(--border-primary);
  border-radius: 4px;
  overflow: hidden;
  margin: 0.75rem 0;
}

.resource-usage-fill {
  height: 100%;
  background: linear-gradient(90deg, var(--color-primary), var(--color-secondary));
  border-radius: 4px;
  transition: width 0.5s ease;
  position: relative;
}

.resource-usage-fill::after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  width: 20px;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3));
  animation: shine 2s infinite;
}

@keyframes shine {
  0% { transform: translateX(-20px); }
  100% { transform: translateX(20px); }
}

/* I'm creating GitHub repository card styles */
.repo-card {
  background: var(--bg-tertiary);
  border: 1px solid var(--border-primary);
  border-radius: var(--border-radius-lg);
  padding: 1.5rem;
  transition: all var(--duration-medium) ease;
  cursor: pointer;
  position: relative;
  overflow: hidden;
}

.repo-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(34, 211, 238, 0.1), transparent);
  transition: left 0.6s ease;
}

.repo-card:hover::before {
  left: 100%;
}

.repo-card:hover {
  border-color: var(--border-secondary);
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.4);
}

.repo-title {
  font-family: var(--font-mono);
  font-size: 1.125rem;
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: 0.5rem;
  transition: color var(--duration-fast) ease;
}

.repo-card:hover .repo-title {
  color: var(--color-primary);
}

.repo-description {
  color: var(--text-secondary);
  line-height: 1.5;
  margin-bottom: 1rem;
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.repo-stats {
  display: flex;
  align-items: center;
  gap: 1rem;
  font-size: 0.75rem;
  color: var(--text-tertiary);
}

.repo-stat {
  display: flex;
  align-items: center;
  gap: 0.25rem;
}

.repo-language-dot {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  display: inline-block;
}

.repo-topics {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-top: 0.75rem;
}

.repo-topic {
  background: var(--bg-secondary);
  color: var(--text-tertiary);
  padding: 0.25rem 0.5rem;
  border-radius: var(--border-radius);
  font-size: 0.675rem;
  font-family: var(--font-mono);
  border: 1px solid var(--border-primary);
  transition: all var(--duration-fast) ease;
}

.repo-topic:hover {
  border-color: var(--color-primary);
  color: var(--color-primary);
}

/* I'm styling the tech stack information component */
.tech-stack-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 1.5rem;
}

.tech-card {
  background: var(--bg-tertiary);
  border: 1px solid var(--border-primary);
  border-radius: var(--border-radius-lg);
  padding: 2rem;
  transition: all var(--duration-medium) ease;
  cursor: pointer;
  position: relative;
}

.tech-card:hover {
  border-color: var(--color-primary);
  box-shadow: 0 0 30px rgba(34, 211, 238, 0.1);
}

.tech-card-header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: 1rem;
}

.tech-name {
  font-family: var(--font-mono);
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--text-primary);
}

.tech-version {
  font-size: 0.75rem;
  color: var(--text-muted);
  font-family: var(--font-mono);
  background: var(--bg-secondary);
  padding: 0.25rem 0.5rem;
  border-radius: var(--border-radius);
}

.tech-description {
  color: var(--text-secondary);
  line-height: 1.6;
  margin-bottom: 1.5rem;
}

.tech-features {
  list-style: none;
  padding: 0;
  margin: 0;
}

.tech-feature {
  display: flex;
  align-items: flex-start;
  gap: 0.5rem;
  margin-bottom: 0.5rem;
  font-size: 0.875rem;
  color: var(--text-tertiary);
}

.tech-feature::before {
  content: 'â–¶';
  color: var(--color-primary);
  font-size: 0.75rem;
  margin-top: 0.125rem;
}

/* I'm creating benchmark comparison chart styles */
.benchmark-chart {
  background: var(--bg-tertiary);
  border: 1px solid var(--border-primary);
  border-radius: var(--border-radius-lg);
  padding: 2rem;
}

.benchmark-bar {
  display: flex;
  align-items: center;
  gap: 1rem;
  margin-bottom: 1rem;
}

.benchmark-label {
  min-width: 80px;
  font-family: var(--font-mono);
  font-size: 0.875rem;
  color: var(--text-secondary);
}

.benchmark-bar-container {
  flex: 1;
  height: 24px;
  background: var(--border-primary);
  border-radius: 12px;
  position: relative;
  overflow: hidden;
}

.benchmark-bar-fill {
  height: 100%;
  border-radius: 12px;
  position: relative;
  transition: width 1s ease;
  display: flex;
  align-items: center;
  justify-content: flex-end;
  padding-right: 0.75rem;
}

.benchmark-bar-fill.rust {
  background: linear-gradient(90deg, #ce422b, #dea584);
}

.benchmark-bar-fill.javascript {
  background: linear-gradient(90deg, #f0db4f, #f7df1e);
}

.benchmark-bar-fill.python {
  background: linear-gradient(90deg, #306998, #3776ab);
}

.benchmark-bar-fill.java {
  background: linear-gradient(90deg, #ed8b00, #f89820);
}

.benchmark-value {
  font-family: var(--font-mono);
  font-size: 0.75rem;
  font-weight: 600;
  color: white;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
}

/* I'm styling loading and error states */
.loading-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 3rem;
  text-align: center;
}

.loading-spinner {
  width: 3rem;
  height: 3rem;
  border: 3px solid var(--border-primary);
  border-top-color: var(--color-primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: 1rem;
}

.loading-text {
  font-family: var(--font-mono);
  color: var(--text-secondary);
  font-size: 0.875rem;
}

.error-container {
  background: rgba(239, 68, 68, 0.1);
  border: 1px solid #dc2626;
  border-radius: var(--border-radius-lg);
  padding: 1.5rem;
  text-align: center;
}

.error-title {
  color: #ef4444;
  font-family: var(--font-mono);
  font-size: 1rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
}

.error-message {
  color: var(--text-secondary);
  font-size: 0.875rem;
  line-height: 1.5;
}

/* I'm creating navigation styles */
.nav-link {
  position: relative;
  font-family: var(--font-mono);
  font-size: 0.875rem;
  color: var(--text-secondary);
  text-decoration: none;
  padding: 0.5rem 0;
  transition: color var(--duration-fast) ease;
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

.nav-link:hover {
  color: var(--text-primary);
}

.nav-link.active {
  color: var(--color-primary);
}

.nav-link::after {
  content: '';
  position: absolute;
  bottom: -1px;
  left: 0;
  width: 0;
  height: 1px;
  background: var(--color-primary);
  transition: width var(--duration-medium) ease;
}

.nav-link:hover::after,
.nav-link.active::after {
  width: 100%;
}

/* I'm creating alert and notification styles */
.alert {
  border-radius: var(--border-radius);
  padding: 1rem 1.25rem;
  margin-bottom: 1rem;
  display: flex;
  align-items: flex-start;
  gap: 0.75rem;
}

.alert-success {
  background: rgba(34, 197, 94, 0.1);
  border: 1px solid #22c55e;
  color: #22c55e;
}

.alert-warning {
  background: rgba(245, 158, 11, 0.1);
  border: 1px solid #f59e0b;
  color: #f59e0b;
}

.alert-error {
  background: rgba(239, 68, 68, 0.1);
  border: 1px solid #ef4444;
  color: #ef4444;
}

.alert-info {
  background: rgba(59, 130, 246, 0.1);
  border: 1px solid #3b82f6;
  color: #3b82f6;
}

.alert-icon {
  margin-top: 0.125rem;
  flex-shrink: 0;
}

.alert-content {
  flex: 1;
}

.alert-title {
  font-weight: 600;
  margin-bottom: 0.25rem;
}

.alert-message {
  font-size: 0.875rem;
  opacity: 0.9;
}

/* I'm creating responsive utilities for components */
@media (max-width: 768px) {
  .fractal-controls {
    position: static;
    margin-top: 1rem;
    background: var(--bg-tertiary);
  }

  .system-monitor-grid {
    grid-template-columns: 1fr;
  }

  .tech-stack-grid {
    grid-template-columns: 1fr;
  }

  .benchmark-bar {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.5rem;
  }

  .benchmark-label {
    min-width: unset;
  }
}
